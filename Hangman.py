secret_word = "" #загадывается слово
secret_word_list = list(len(secret_word) * "*") #создается список из символов загаданного слова, записанного специальным символом * 
letters_entered = [] #созается пустой список для уже введенных до данного момента букв
commands = {"/help": "Загадано слово. Вы вводите буквы по одной.\
Если Вы угадываете букву, которая есть в слове, то показывается\
загаданное слово и указаваются все отгаданные буквы.\
Если Вы не угадали букву, Вам сообщается, что такой буквы нет.\
Игра продолжается до тех пор, пока не будет угадано слово.", #создается словарь, где ключ - название команды, значение - действие команды
            "/usedletters": ", ".join(letters_entered),
            "/leftletters": secret_word_list.count("*")}
print("Во время игры можно использовать следующие команды:") #происходит объяснение команд для игрока
print("/help - показать правила игры")
print("/usedletters - показать список введенных букв")
print("/leftletters - показать количество оставшихся букв")
print(len(secret_word) * "*") #происходит вывод загаданного слова, записанного специальным символом *
count = 0 #объявляется переменная - счетчик, значение которого равно 0. Счетчик нужен для подсчета количества потраченных попыток
while "*" in secret_word_list: #объвляется цикл while, который выполняется, пока в списке из загаданного слова остаются символы *
    count += 1 #счетчик добавляет единицу (попытку)
    smth = input() #происходит ввод игроком буквы/целого слова
    if smth.lower() == secret_word.lower(): #происходит проверка: если игрок ввел слово, которое является загаданным, то цикл прерывается
        break
    if smth in commands: #происходит проверка: если игрок ввел команду, то программа совершает действие команды
        count -= 1 #счетчик вычитает единицу, т.к. команда не является попыткой
        print(commands[smth])
        continue #здесь и далее: переход на следующую итерацию цикла
    if smth.isalpha() == False: #происходит проверка: если в строке не все символы являются буквами, то программа выдает ошибку
        print("Ошибка: вы ввели НЕ букву!")
        continue
    if len(smth) > 1: #происходит проверка: если длина введенной игроком строки превышает единицу, программа выдает ошибку
        print("Ошибка: вы ввели БОЛЬШЕ одной буквы или введенное слово НЕ является правильным ответом!")
        continue
    letter = smth.lower() #происходит переименование переменной (для удобства) с приведением букв строки к нижнему регистру 
    if letter in letters_entered: #происходит проверка: если данная буква была введена ранее, то программа выдает ошибку
        print("Ошибка: вы уже вводили данную букву!")
        continue
    letters_entered.append(letter) #список для уже введенных до данного момента букв добавляет данную букву
    commands["/usedletters"] = ", ".join(letters_entered) #словарь меняет значение для данного ключа (названия команды)
    if letter in secret_word: #происходит проверка: если данная буква есть в загаданном слове, то программа сообщает это игроку
        print("Есть такая буква!")
        for i in range(len(secret_word)): #а также программа заменяет все символы *, заменяющие данную букву, на эту букву
            if secret_word[i] == letter:
                secret_word_list[i] = letter
        print("".join(secret_word_list)) #происходит вывод слово, в котором * - еще неотгаданные буквы (остальные показаны)
    else:
        print("Нет такой буквы!") #в случае, если данной буквы нет в загаданном слове, то это сообщается игроку
print("Поздравляем! Вы угадали слово!") #слово отгадано, это сообщается игроку
print(f"Количество затраченных попыток: {count}") #выводится количество затраченных попыток
    else:
        print("Нет такой буквы!")   
print("Поздравляем! Вы угадали слово!")
print(f"Количество затраченных попыток: {count}")
